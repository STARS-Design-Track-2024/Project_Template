# SPDX-FileCopyrightText: 2020 Efabless Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# SPDX-License-Identifier: Apache-2.0

# Caravel user project includes
-v $(USER_PROJECT_VERILOG)/rtl/user_project_wrapper.v
#-v $(USER_PROJECT_VERILOG)/rtl/user_proj_example.v
-v $(USER_PROJECT_VERILOG)/rtl/nebula_ii.v

# Wishbone Bus Wrap includes
-v $(USER_PROJECT_VERILOG)/rtl/wb_wrapper.vh
-v $(USER_PROJECT_VERILOG)/dv/tb_macros.vh
#-v $(USER_PROJECT_VERILOG)/dv/wb_tasks.vh

# Wishbone Interconnect  
-v $(USER_PROJECT_VERILOG)/rtl/wishbone_interconnect/wishbone_arbitrator.sv
-v $(USER_PROJECT_VERILOG)/rtl/wishbone_interconnect/wishbone_decoder.sv

# Wishbone Manager Control
-v $(USER_PROJECT_VERILOG)/rtl/wishbone_manager/wishbone_manager.sv

# GPIO Control
-v $(USER_PROJECT_VERILOG)/rtl/gpio_control/gpio_control_WB.sv
-v $(USER_PROJECT_VERILOG)/rtl/gpio_control/gpio_control_Wrapper.v
-v $(USER_PROJECT_VERILOG)/rtl/gpio_control/gpio_control.sv

# LA Control
-v $(USER_PROJECT_VERILOG)/rtl/la_control/la_control_WB.v
-v $(USER_PROJECT_VERILOG)/rtl/la_control/la_control_Wrapper.v
-v $(USER_PROJECT_VERILOG)/rtl/la_control/la_control.sv

# Sample Team project
-v $(USER_PROJECT_VERILOG)/rtl/sample_team_proj/sample_team_proj_Wrapper.sv
-v $(USER_PROJECT_VERILOG)/rtl/sample_team_proj/sample_team_proj_WB.v
-v $(USER_PROJECT_VERILOG)/rtl/sample_team_proj/sample_team_proj.sv
-v $(USER_PROJECT_VERILOG)/rtl/sample_team_proj/src/decoder_for_GPIO.sv
-v $(USER_PROJECT_VERILOG)/rtl/sample_team_proj/src/flex_counter.sv

# SRAM
-v $(USER_PROJECT_VERILOG)/../ip/EF_SRAM_1024x32/hdl/SRAM_1024x32.v
-v $(USER_PROJECT_VERILOG)/../ip/EF_SRAM_1024x32/hdl/ram_controller.v
-v $(USER_PROJECT_VERILOG)/../ip/EF_SRAM_1024x32/hdl/EF_SRAM_1024x32_wrapper.v
-v $(USER_PROJECT_VERILOG)/../ip/EF_SRAM_1024x32/hdl/beh_models/EF_SRAM_1024x32.tt_180V_25C.v
#-v $(USER_PROJECT_VERILOG)/../ip/EF_SRAM_1024x32/hdl/EF_SRAM_1024x32_wrapper_LVS.v

# Team 04
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/tippy_top.sv

-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/team_04_Wrapper.sv
-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/team_04_WB.v
-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/team_04.sv
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/alu.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/alu_control_unit.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/aluop_mux.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/control_unit.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/CPU.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/decode.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/imm_gen.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/memory_handler.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/program_counter.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/reg_write_mux.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/register_file.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/request_handler.v
-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/tippy_top.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/UART_Receiver.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/VGA_data_controller.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/VGA_out.v
#-v $(USER_PROJECT_VERILOG)/rtl/team_projects/team_04/source_v/project.v
